{"ast":null,"code":"var _jsxFileName = \"/Users/sambadityabiswas/react/my-test/src/blog.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './Blog.css';\nimport { useParams } from \"react-router-dom\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Blog() {\n  _s();\n  const [data, setData] = React.useState('');\n  const {\n    post\n  } = useParams();\n  React.useEffect(() => {\n    fetchData(post);\n  }, []);\n  const fetchData = async post => {\n    try {\n      const response = await Axios.get('http://localhost:3001/blogs/' + post, {\n        responseType: Blob\n      });\n      if (!response.ok) {\n        console.error('Error in loading posts: ');\n      }\n    } catch (error) {\n      console.error('Error in loading posts: ', error);\n    }\n  };\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"ELLO \", data]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }, this);\n}\n_s(Blog, \"8PpYynQekUiLDYuIuEERwp/3Nhc=\", false, function () {\n  return [useParams];\n});\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useParams","Axios","jsxDEV","_jsxDEV","Blog","_s","data","setData","useState","post","useEffect","fetchData","response","get","responseType","Blob","ok","console","error","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sambadityabiswas/react/my-test/src/blog.js"],"sourcesContent":["import React from \"react\";\nimport './Blog.css'\nimport { useParams } from \"react-router-dom\";\nimport Axios from'axios'\n\n\n\nfunction Blog(){\n\n    const[data, setData] = React.useState('');\n    const{post} = useParams();\n    React.useEffect(() => {\n        fetchData(post);\n    }, []);\n    \n    const fetchData = async(post) =>{\n      \n        \n          try{\n            const response = await Axios.get('http://localhost:3001/blogs/'+post, {responseType: Blob});\n            if(!response.ok){\n                console.error('Error in loading posts: ');\n            }\n           \n        }catch(error){\n            console.error('Error in loading posts: ',error)\n        }\n      }\n      \n\n    console.log(data)\n   \n    return (<p>ELLO {data}</p>)\n}\n\nexport default Blog;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAK,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIxB,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAEX,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAK;IAACC;EAAI,CAAC,GAAGT,SAAS,CAAC,CAAC;EACzBD,KAAK,CAACW,SAAS,CAAC,MAAM;IAClBC,SAAS,CAACF,IAAI,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,SAAS,GAAG,MAAMF,IAAI,IAAI;IAG1B,IAAG;MACD,MAAMG,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,8BAA8B,GAACJ,IAAI,EAAE;QAACK,YAAY,EAAEC;MAAI,CAAC,CAAC;MAC3F,IAAG,CAACH,QAAQ,CAACI,EAAE,EAAC;QACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IAEJ,CAAC,QAAMA,KAAK,EAAC;MACTD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAACA,KAAK,CAAC;IACnD;EACF,CAAC;EAGHD,OAAO,CAACE,GAAG,CAACb,IAAI,CAAC;EAEjB,oBAAQH,OAAA;IAAAiB,QAAA,GAAG,OAAK,EAACd,IAAI;EAAA;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC9B;AAACnB,EAAA,CA1BQD,IAAI;EAAA,QAGKJ,SAAS;AAAA;AAAAyB,EAAA,GAHlBrB,IAAI;AA4Bb,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}