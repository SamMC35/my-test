{"ast":null,"code":"import React from\"react\";import ReactMarkdown from\"react-markdown\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function AboutThisPage(){const[markdown,setMarkdown]=React.useState('');React.useEffect(()=>{fetch(\"test.md\").then(response=>response.text()).then(setMarkdown).catch(error=>console.error('Error fetching Markdown:',error));},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"How I made this Website\"})}),/*#__PURE__*/_jsxs(\"article\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"For me, creating this website is an adventure in and of itself. By trade, I am a Java developer primarily focusing on the backend with barely any experience in the front-end (pun intended) of things. So I had to learn stuff to make this website into a reality.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Tuesday, 23 April 2024 - Right now I have developed a skeleton for the website and kinda just realized that I need to blog this as well. Let's talk about the history and then the tech stack.\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"History\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Since forever, I always wanted to make my own website for stuff like my blog, webcomic, or my writings. I did try back in 2017 using a domain from GoDaddy and Wordpress hosting but it became too expensive for my broke college ass. Then I made a free Wordpress account but I barely stayed to update it. Using these premade solutions never interested me, and I wanted full control over the ins and outs of the website which I didn't have the knowledge to pull it off.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Now after finishing my college and having worked for 2 years in a tech job, I am finally confident enough to do it. Let's get into the tech stack.\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Tech Stack\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Tech stack basically means the technology you're using in a project in simple words. For this project, I am using the PERN stack, as in PostgreSQL, Express, React, and NodeJS.\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"PostgreSQL\"}),\" - I have the knowledge to actually use PGSql from work and it seemed like a no-brainer for this project to store my posts metadata.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Express and NodeJS\"}),\" - NodeJS is used to run server-side Javascript code and Express is used to build the APIs.\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"React\"}),\" - React is the frontend language I used for your viewing pleasures. Earlier I was just using HTML and CSS but I felt very limited using those. So then I decided to just use a framework to make my life a bit easier.\"]})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Hardware\"}),/*#__PURE__*/_jsx(\"p\",{children:\"For now, I have decided to run the database and the website on a Raspberry Pi 3B. I have one lying around so I just recycled it. For the traffic I am expecting, it will be enough to run the server without worrying about explosions.\"})]})]});}export default AboutThisPage;","map":{"version":3,"names":["React","ReactMarkdown","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AboutThisPage","markdown","setMarkdown","useState","useEffect","fetch","then","response","text","catch","error","console","children"],"sources":["/Users/sambadityabiswas/react/my-test/src/modules/AboutThisPage.js"],"sourcesContent":["import React from \"react\";\nimport ReactMarkdown from \"react-markdown\"\n\nfunction AboutThisPage(){\n\n    const [markdown, setMarkdown] = React.useState('');\n\n  React.useEffect(() => {\n    fetch(\"test.md\")\n      .then(response => response.text())\n      .then(setMarkdown)\n      .catch(error => console.error('Error fetching Markdown:', error));\n  }, []);\n    return(\n        <>\n        <header>\n            <h1>How I made this Website</h1>\n        </header>\n        <article>\n            <p>For me, creating this website is an adventure in and of itself. By trade, I am a Java developer primarily focusing on the backend with barely any experience in the front-end (pun intended) of things. So I had to learn stuff to make this website into a reality.</p>\n            <p>Tuesday, 23 April 2024 - Right now I have developed a skeleton for the website and kinda just realized that I need to blog this as well. Let's talk about the history and then the tech stack.</p>\n            <h3>History</h3>\n            <p>Since forever, I always wanted to make my own website for stuff like my blog, webcomic, or my writings. I did try back in 2017 using a domain from GoDaddy and Wordpress hosting but it became too expensive for my broke college ass. Then I made a free Wordpress account but I barely stayed to update it. Using these premade solutions never interested me, and I wanted full control over the ins and outs of the website which I didn't have the knowledge to pull it off.</p>\n            <p>Now after finishing my college and having worked for 2 years in a tech job, I am finally confident enough to do it. Let's get into the tech stack.</p>\n            <h3>Tech Stack</h3>\n            <p>Tech stack basically means the technology you're using in a project in simple words. For this project, I am using the PERN stack, as in PostgreSQL, Express, React, and NodeJS.</p>\n            <ul>\n                <li><strong>PostgreSQL</strong> - I have the knowledge to actually use PGSql from work and it seemed like a no-brainer for this project to store my posts metadata.</li>\n                <li><strong>Express and NodeJS</strong> - NodeJS is used to run server-side Javascript code and Express is used to build the APIs.</li>\n                <li><strong>React</strong> - React is the frontend language I used for your viewing pleasures. Earlier I was just using HTML and CSS but I felt very limited using those. So then I decided to just use a framework to make my life a bit easier.</li>\n            </ul>\n            <h3>Hardware</h3>\n            <p>For now, I have decided to run the database and the website on a Raspberry Pi 3B. I have one lying around so I just recycled it. For the traffic I am expecting, it will be enough to run the server without worrying about explosions.</p>\n        </article>\n        </>\n    )\n}\n\nexport default AboutThisPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,aAAa,KAAM,gBAAgB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE1C,QAAS,CAAAC,aAAaA,CAAA,CAAE,CAEpB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGV,KAAK,CAACW,QAAQ,CAAC,EAAE,CAAC,CAEpDX,KAAK,CAACY,SAAS,CAAC,IAAM,CACpBC,KAAK,CAAC,SAAS,CAAC,CACbC,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACJ,WAAW,CAAC,CACjBO,KAAK,CAACC,KAAK,EAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAAC,CACrE,CAAC,CAAE,EAAE,CAAC,CACJ,mBACIb,KAAA,CAAAE,SAAA,EAAAa,QAAA,eACAjB,IAAA,WAAAiB,QAAA,cACIjB,IAAA,OAAAiB,QAAA,CAAI,yBAAuB,CAAI,CAAC,CAC5B,CAAC,cACTf,KAAA,YAAAe,QAAA,eACIjB,IAAA,MAAAiB,QAAA,CAAG,sQAAoQ,CAAG,CAAC,cAC3QjB,IAAA,MAAAiB,QAAA,CAAG,gMAA8L,CAAG,CAAC,cACrMjB,IAAA,OAAAiB,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBjB,IAAA,MAAAiB,QAAA,CAAG,mdAAid,CAAG,CAAC,cACxdjB,IAAA,MAAAiB,QAAA,CAAG,oJAAkJ,CAAG,CAAC,cACzJjB,IAAA,OAAAiB,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBjB,IAAA,MAAAiB,QAAA,CAAG,iLAA+K,CAAG,CAAC,cACtLf,KAAA,OAAAe,QAAA,eACIf,KAAA,OAAAe,QAAA,eAAIjB,IAAA,WAAAiB,QAAA,CAAQ,YAAU,CAAQ,CAAC,uIAAoI,EAAI,CAAC,cACxKf,KAAA,OAAAe,QAAA,eAAIjB,IAAA,WAAAiB,QAAA,CAAQ,oBAAkB,CAAQ,CAAC,8FAA2F,EAAI,CAAC,cACvIf,KAAA,OAAAe,QAAA,eAAIjB,IAAA,WAAAiB,QAAA,CAAQ,OAAK,CAAQ,CAAC,0NAAuN,EAAI,CAAC,EACtP,CAAC,cACLjB,IAAA,OAAAiB,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBjB,IAAA,MAAAiB,QAAA,CAAG,yOAAuO,CAAG,CAAC,EACzO,CAAC,EACR,CAAC,CAEX,CAEA,cAAe,CAAAZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}