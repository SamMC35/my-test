{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport './App.css';\nimport { useParams } from \"react-router-dom\";\nimport Axios from 'axios';\nimport ReactMarkdown from \"react-markdown\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BlogRetriever() {\n  _s();\n  const [data, setData] = React.useState('');\n  const {\n    post\n  } = useParams();\n  React.useEffect(() => {\n    fetchData(post);\n  }, []);\n  const fetchData = async post => {\n    try {\n      const response = await Axios.get('http://localhost:3001/blogs/' + post, {\n        responseType: Blob\n      });\n      console.log(response.data);\n      setData(response.data);\n    } catch (error) {\n      console.error('Error in loading posts: ', error);\n    }\n  };\n\n  // const result = remark().use(remarkReact).processSync(data).result;\n\n  // console.log(data)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data\n  }, void 0, false);\n}\n_s(BlogRetriever, \"8PpYynQekUiLDYuIuEERwp/3Nhc=\", false, function () {\n  return [useParams];\n});\n_c = BlogRetriever;\nexport default BlogRetriever;\nvar _c;\n$RefreshReg$(_c, \"BlogRetriever\");","map":{"version":3,"names":["React","useParams","Axios","ReactMarkdown","Fragment","_Fragment","jsxDEV","_jsxDEV","BlogRetriever","_s","data","setData","useState","post","useEffect","fetchData","response","get","responseType","Blob","console","log","error","children","_c","$RefreshReg$"],"sources":["/Users/sambadityabiswas/react/my-test/src/BlogRetriever.js"],"sourcesContent":["import React from \"react\";\nimport './App.css'\nimport { useParams } from \"react-router-dom\";\nimport Axios from'axios'\nimport ReactMarkdown from \"react-markdown\"\n\nfunction BlogRetriever(){\n    const[data, setData] = React.useState('');\n    const{post} = useParams();\n    React.useEffect(() => {\n        fetchData(post);\n    }, []);\n    \n    const fetchData = async(post) =>{\n      \n        \n          try{\n            const response = await Axios.get('http://localhost:3001/blogs/'+post, {responseType: Blob});\n          \n           console.log(response.data);\n           setData(response.data)\n\n        }catch(error){\n            console.error('Error in loading posts: ',error)\n        }\n      }\n      \n      // const result = remark().use(remarkReact).processSync(data).result;\n\n    // console.log(data)\n   \n    return (<>{data}</>)\n}\n\nexport default BlogRetriever;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAK,OAAO;AACxB,OAAOC,aAAa,MAAM,gBAAgB;AAAA,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,aAAaA,CAAA,EAAE;EAAAC,EAAA;EACpB,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAK;IAACC;EAAI,CAAC,GAAGZ,SAAS,CAAC,CAAC;EACzBD,KAAK,CAACc,SAAS,CAAC,MAAM;IAClBC,SAAS,CAACF,IAAI,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,SAAS,GAAG,MAAMF,IAAI,IAAI;IAG1B,IAAG;MACD,MAAMG,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,8BAA8B,GAACJ,IAAI,EAAE;QAACK,YAAY,EAAEC;MAAI,CAAC,CAAC;MAE5FC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACN,IAAI,CAAC;MAC1BC,OAAO,CAACK,QAAQ,CAACN,IAAI,CAAC;IAEzB,CAAC,QAAMY,KAAK,EAAC;MACTF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAACA,KAAK,CAAC;IACnD;EACF,CAAC;;EAED;;EAEF;;EAEA,oBAAQf,OAAA,CAAAF,SAAA;IAAAkB,QAAA,EAAGb;EAAI,gBAAG,CAAC;AACvB;AAACD,EAAA,CA1BQD,aAAa;EAAA,QAEJP,SAAS;AAAA;AAAAuB,EAAA,GAFlBhB,aAAa;AA4BtB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}